% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uforest.R, R/utree.R
\name{var_importance.uforest}
\alias{var_importance.uforest}
\alias{var_importance}
\alias{var_importance.utree}
\title{Variable importance for uplift trees and uplift random forest.}
\usage{
\method{var_importance}{uforest}(x, type = "I", valid.data = NULL,
  error.fun = "sel")

\method{var_importance}{utree}(x, type = "I", valid.data = NULL,
  error.fun = "sel")
}
\arguments{
\item{x}{An object of class \code{"utree"} or \code{"uforest"}}

\item{type}{Either \code{"I"} or \code{"II"}, specifying the type of
importance measure. See details.}

\item{valid.data}{For \code{type = "II"}, importance is measured based on a
validation data frame, which must be provided.}

\item{error.fun}{The prediction error used to compute variable importance when
\code{type = "II"}. Possible values are \code{"sel"} for squared-error loss
(default), or \code{"abs"} for absolute loss. See details.}
}
\value{
A data frame with the variable importance.
}
\description{
This is the extractor function for variable importance measures as produced by
\code{utree} and \code{uforest}.
}
\details{
For type I, the measure of importance given to a predictor is the sum of the
values given by the split-criterion produced over all internal nodes for which
it was chosen as the splitting variable. For uplift random forest, this
relative influence measure is naturally extended by averaging the importance
for each variable over the collection of trees. For type II, variable
importance is measured based on an independent validation sample, with the aim
of quantifying the prediction strength of each variable. This is achieved by
first measuring the prediction accuracy on this validation sample.
Subsequently, the values for the jth variable are randomly permuted, and the
accuracy again computed. The decrease in accuracy as a result of this
permutation is the importance attributed to the jth variable.The accuracy is
measured by the squared-error or absolute error between the predicted and true
uplift on each terminal node of the tree.
}
\examples{
set.seed(1)
df <- sim_uplift(n = 1000, p = 50, response = "binary")
form <- create_uplift_formula(x = names(df)[-c(1:3)], y = "y", trt = "T")
fit <- utree(form, data = df, maxdepth = 3)
var_importance(fit)
}
\author{
Leo Guelman \email{leo.guelman@gmail.com}
}
