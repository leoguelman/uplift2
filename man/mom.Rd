% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mom.R
\name{mom}
\alias{mom}
\alias{mom.formula}
\alias{print.mom}
\title{Modified outcome method for uplift modeling.}
\usage{
\method{mom}{formula}(formula, data, subset, na.action, sampling = "none",
  newRespName = "z", classLevel = NULL, treatLevel = NULL)

\method{print}{mom}(x, ...)
}
\arguments{
\item{formula}{A model formula of the form y ~ x1 + ....+ xn + trt(), where
the left-hand side corresponds to the observed response, the right-hand side
corresponds to the predictors, and 'trt' is the special expression to mark
the treatment term. If the treatment term is not a factor, it is converted
to one.}

\item{data}{A data frame in which to interpret the variables named in the
formula.}

\item{subset}{Expression indicating which subset of the rows of data should be
included. All observations are included by default.}

\item{na.action}{A missing-data filter function. Defaults to \code{na.omit}.}

\item{sampling}{The sampling method used to balance the treatment variable.
See details.}

\item{newRespName}{The name for the transformed response variable.}

\item{classLevel}{A character string for the class of interest. Only
applicable when the response is a factor. Defaults to the last level of the
factor.}

\item{treatLevel}{A character string for the treatment level of interest.
Defaults to the last level of the treatment factor.}

\item{x}{A \code{mom} object.}

\item{\dots}{Additional arguments for the S3 methods.}
}
\value{
An object of class \code{"mom"}, which is a list with the following
 components (among others passed to the S3 methods): \itemize{\item
 \code{data} The data set including the original response variable, the
 treatment indicator, the transformed response, the predictors, and
 (optionally) a weight variable. \item\code{call} The original call to
 \code{mom}. }
}
\description{
\code{mom} transforms the response variable in a way that is relevant for
subsequent uplift modeling. It handles continuous (uncensored) and categorical
responses. A model fitted to this transformed response has a causal
interpretation for the treatment effect conditional on the covariates.
}
\details{
Let \eqn{T \in [-1,1]} be a binary treatment indicator with \eqn{T=1} being
the treatment level of interest (i.e., the treatment group). Also, let \eqn{y}
be a response variable. If the response is a factor, the transformed response
is set to 1 if \eqn{T=1} and \eqn{y=1}, or if \eqn{T=-1} and \eqn{y=0}
(assuming the \code{classLevel} of interest for \eqn{y} is 1). Otherwise, the
transformed response is set to 0. Under the specific case in which
\eqn{Prob(T=1) = Prob(T=-1) = 1/2}, it is easy to show that

\deqn{2 * Prob(z=1|X) - 1 = Prob(y=1|T = 1, X) - Prob(y=1|T = -1, X)}
(Jaskowski and Jaroszewicz, 2012), where y, z, and X denote the original
response variable, the transformed response, and the covariates, respectively.

If the response is numeric, it is transformed as \eqn{z = 2 * (y - \bar{y}) *
T}. A model fitted to \eqn{z} effectively estimates \eqn{E[y|T = 1, X] - E[y|T
= -1, X]} (Tian et al., 2014).

The argument \code{sampling} can be used to obtain a balanced treatment
distribution. Specifically, if \code{sampling = "oversample"}, observations
from the treatment minority class are duplicated (by sampling with
replacement), so that the resulting data frame has exactly the same number of
observations under each treatment level. Alternatively, if \code{sampling =
"undersample"}, observations from the treatment majority class are dropped (by
sampling without replacement), so that the resulting data frame has exactly
the same number of observations under each treatment level. If \code{sampling
= "none"}, no sampling is done. Lastly, if \code{sampling = "weights"}, the
returned data frame includes a weight variable that equals (1 - \eqn{\pi}) for
T = \code{treatLevel}  and \eqn{\pi} otheriwse, where \eqn{\pi = Prob(T =
treatLevel)}. The weight variable can be subsequently used to perform
case-weighted regression/classification on the transformed response.
}
\examples{

set.seed(324)
df_train <- sim_uplift(p = 15, response = "binary")
df_train_mcm <- mom(y ~  X1 + X2 + X3 + trt(T),
                   data = df_train, sampling = "undersample")
}
\references{
Guelman, L., Guillen, M., and Perez-Marin A.M. (2015). "A decision support
framework to implement optimal personalized marketing interventions." Decision
Support Systems, Vol. 72, pp. 24--32.

Jaskowski, M. and Jaroszewicz, S. (2012)."Uplift modeling for clinical trial
data". In ICML 2012 Workshop on Machine Learning for Clinical Data Analysis,
Edinburgh, Scotland.

Tian, L., Alizadeh, A., Gentles, A. and Tibshirani, R. (2014). "A simple
method for detecting interactions between a treatment and a large number of
covariates." Journal of the American Statistical Association, 109:508, pp.
1517--1532,
}
\author{
Leo Guelman \email{leo.guelman@gmail.com}
}
