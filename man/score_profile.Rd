% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score_profile.R
\name{score_profile}
\alias{score_profile}
\alias{score_profile.formula}
\alias{is.score_profile}
\alias{print.score_profile}
\title{Profile deciles from a fitted model.}
\usage{
\method{score_profile}{formula}(formula, data, groups = 10,
  statistic = "mean", direction = "D", categorize = TRUE, nBins = 4,
  continuous = 4, digitsN = NULL, digitsF = NULL, digitsB = NULL,
  groupVar = NULL, excludeNA = FALSE, LaTex = FALSE)

\method{is}{score_profile}(x)

\method{print}{score_profile}(x, ...)
}
\arguments{
\item{formula}{A formula expression of the form score ~ predictors, where the
score represents the predictions from a fitted model.}

\item{data}{A data frame in which to interpret the variables named in the
formula.}

\item{groups}{Number of groups of equal observations in which to partition the
data set to show results. The default value is 10 (deciles).}

\item{statistic}{Functions that operate on a vector and produce a single
value, as \code{mean} and \code{sd} do. It may be a user-defined function.
To request several statistics, use the \code{+} operator. For example,
\code{statistic = "mean + min + max"}. This argument only applies to numeric
variables when \code{categorize = FALSE}. Factors are always shows as
percentages within each group.}

\item{direction}{Possible values are \code{"D"} or \code{"I"}, for group
number labels which are decreasing or increasing with the model score,
respectively.}

\item{categorize}{Should numeric predictors be categorized at their quantiles?}

\item{nBins}{The number of bins created for numeric variables. The bins are
created based on quantiles, with a default value of 4 (quartiles). Only
applicable when \code{categorize=TRUE}.}

\item{continuous}{When \code{categorize=TRUE}, it specifies the threshold for
when a numeric variable should be categorized at their quantiles, or at
their unique values. When there are at least \code{continuous} unique
values, bins are created based on quantiles. Otherwise, the variables is
converted to factor with levels being equal to the variable's unique values.}

\item{digitsN}{Number of decimal places to show for numeric predictors.}

\item{digitsF}{Number of decimal places to show for factor predictors.}

\item{digitsB}{Number of digits used in formatting the breaks}

\item{groupVar}{A character string with the variable name in the data which
holds the grouped predictions. If this argument is not null, groups of
predictions are not created based on their quantiles but already declared
from the named variable supplied to this argument.}

\item{excludeNA}{Should the results exclude observations with missing values
in any of the variables named in the formula?}

\item{LaTex}{Should the function output LaTex code?}

\item{x}{A \code{score_profile} object.}

\item{\dots}{Additional arguments for the S3 methods.}
}
\value{
An object of class \code{score_profile}, which is a list with the
 following components: \itemize{ \item \code{data} The data frame containing
 the data used for plotting. \item \code{Table} An object of class
 \code{tabular} See \code{?tables::tabular} for details.}
}
\description{
This function can be used to profile the deciles from a fitted model. Given a
vector of numeric scores (fitted values) and predictors, it computes basic
summary statistics for each predictor by score quantile.
}
\details{
This function ranks the variable supplied in the left-hand side of the model
formula and classifies it into groups with approximately the same number of observations.
It subsequently calls the function \code{tables::tabular} to compute the average
of each numeric predictor, and the distribution of each factor within each
group.
}
\examples{

### Simulate some data
set.seed(123)
x1 <- rnorm(1000)
x2 <- rnorm(1000)
f1 <- sample(c(0, 1), 1000, replace = TRUE)
z <- 1 + 2 * x1 + 3 * x2  + f1
pr <- 1 / (1 + exp( -z))
y <- rbinom(1000, 1, pr)
df <- data.frame(y = y, x1 = x1, x2 = x2, f1 = factor(f1))
### Fit model and get fitted values
Fitted <- fitted(glm(y ~ x1 + x2 + f1, data = df, family = "binomial"))
### Profile deciles
score_profile(Fitted ~ x1 + x2 + f1, data = df, direction = "I")
}
\seealso{
\code{\link{ggplot.score_profile}}.
}
\author{
Leo Guelman \email{leo.guelman@rbc.com}
}
