% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score_profile.R
\name{ggplot.score_profile}
\alias{ggplot.score_profile}
\title{Plot a \code{score_profile} object.}
\usage{
\method{ggplot}{score_profile}(x, i.var = NULL, n.type = "boxplot",
  f.type = "percent", statistic = "mean", geom = "point",
  legend.position = NULL, col = NULL, size = NULL, nrows = NULL,
  ncols = NULL, xlab = NULL, ...)
}
\arguments{
\item{x}{An object of class \code{score_profile}.}

\item{i.var}{A numeric vector of indices of the variables to plot. The
variables should be indexed in the same order that they appear in the
initial inspect_balance formula. The default is to plot all variables.}

\item{n.type}{The type of plot for numeric variables. Boxplots are generated
by default. For alternative summary statistics, use \code{summary}.}

\item{f.type}{The type of plot for categorical variables. 100 percent stacked
columns are generated by default. The alternative option is \code{counts},
which show stacked columns of counts.}

\item{statistic}{Functions that operate on a vector and produce a single
value, as \code{mean} and \code{sd} do. It may be a user-defined function.}

\item{geom}{The geometric object to display the data. Argument is passed to
\code{ggplot2::stat_summary} when \code{type = summary}. For \code{type =
summary}, \code{geom = "point"}.}

\item{legend.position}{The position of legends \code{("left", "right",
"bottom", "top")}. The default is \code{"right"}.}

\item{col}{Color of \code{geom}. The default is \code{"red"}.}

\item{size}{Size of \code{geom}. The default is \code{2}.}

\item{nrows}{Number of rows for plots.}

\item{ncols}{Number of columns for plots.}

\item{xlab}{Title for the x.}

\item{\dots}{Additional arguments passed to \code{ggplot2::stat_summary}.}
}
\description{
ggplot method for class `score_profile'
}
\examples{

set.seed(123)
N <- 10000
eps <- rnorm(N)
age <- round(rnorm(N, 50, 10))
income <- rnorm(N, 60000, 10000) + 200 * age
gender <- gl(2, N/2,  labels = c("F", "M"))
insurance <- gl(4, N/4,  labels = c("HOME", "AUTO", "LIFE", "HEALTH"))
z <- 1e-01 + 0.1 * age - 1e-04 * income + 0.3 * (gender == "F") + eps
pr <- 1 / (1 + exp( -z))
purchase <- rbinom(N, 1, pr)
df <- data.frame(purchase, age, income, gender, insurance)
### Fit glm
pred <- fitted(glm(purchase ~ age + income + gender,
                  data = df, family = "binomial"))
profileForm <- pred ~ age + income + gender + insurance
prof1 <- score_profile(profileForm, data = df)
prof1
ggplot(prof1)
}
\author{
Leo Guelman \email{leo.guelman@rbc.com}
}
